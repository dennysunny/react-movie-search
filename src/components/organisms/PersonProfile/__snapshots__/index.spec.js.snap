// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Organisms/PersonProfile should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PersonProfile
    person={
      Object {
        "biography": "bio",
        "birthday": "01.01.2000",
        "combined_credits": Object {},
        "deathday": "02.02.2010",
        "id": 1,
        "name": "name",
        "place_of_birth": "city",
        "profile_path": "path/to/image",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SEO
          title="name"
        />,
        <div
          className="person-wrapper"
        >
          <div
            className="person-info-wrapper"
          >
            <div
              className="person-poster"
            >
              <Link
                replace={false}
                to="/person/1/images"
              >
                <MediaImage
                  className="img-responsive center-block"
                  filePath="path/to/image"
                  mediaType="profile"
                  name="poster"
                  size={2}
                />
              </Link>
            </div>
            <div
              className="person-info"
            >
              <h3
                className="person-name"
                data-name=""
              >
                name
              </h3>
              <div>
                , city
                <span>
                  , 
                  <FormattedDate
                    day="2-digit"
                    month="long"
                    value="01.01.2000"
                    year="numeric"
                  />
                </span>
                <span>
                   - 
                  <FormattedDate
                    day="2-digit"
                    month="long"
                    value="02.02.2010"
                    year="numeric"
                  />
                </span>
              </div>
            </div>
            <div
              className="person-bio-wrapper"
            >
              <h4>
                Biography
              </h4>
              <input
                className="person-bio__more"
                id="person-bio__more"
                type="checkbox"
              />
              <div
                className="person-bio "
              >
                <Markdown
                  options={
                    Object {
                      "forceInline": true,
                    }
                  }
                >
                  bi
                </Markdown>
                <span
                  className="person-bio__hidden"
                >
                  <Markdown
                    options={
                      Object {
                        "forceInline": true,
                      }
                    }
                  >
                    o
                  </Markdown>
                </span>
              </div>
            </div>
          </div>
          <div
            className="person-movies-wrapper"
          >
            <h4>
              Knonw For
            </h4>
            <div
              className="person-movies-known-grid"
            >
              <PersonKnownFor
                combinedCredits={Object {}}
              />
            </div>
            <h4>
              Acting
            </h4>
            <div
              className="person-movies-grid"
            >
              <PersonShows
                shows={Object {}}
              />
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "title": "name",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="person-info-wrapper"
            >
              <div
                className="person-poster"
              >
                <Link
                  replace={false}
                  to="/person/1/images"
                >
                  <MediaImage
                    className="img-responsive center-block"
                    filePath="path/to/image"
                    mediaType="profile"
                    name="poster"
                    size={2}
                  />
                </Link>
              </div>
              <div
                className="person-info"
              >
                <h3
                  className="person-name"
                  data-name=""
                >
                  name
                </h3>
                <div>
                  , city
                  <span>
                    , 
                    <FormattedDate
                      day="2-digit"
                      month="long"
                      value="01.01.2000"
                      year="numeric"
                    />
                  </span>
                  <span>
                     - 
                    <FormattedDate
                      day="2-digit"
                      month="long"
                      value="02.02.2010"
                      year="numeric"
                    />
                  </span>
                </div>
              </div>
              <div
                className="person-bio-wrapper"
              >
                <h4>
                  Biography
                </h4>
                <input
                  className="person-bio__more"
                  id="person-bio__more"
                  type="checkbox"
                />
                <div
                  className="person-bio "
                >
                  <Markdown
                    options={
                      Object {
                        "forceInline": true,
                      }
                    }
                  >
                    bi
                  </Markdown>
                  <span
                    className="person-bio__hidden"
                  >
                    <Markdown
                      options={
                        Object {
                          "forceInline": true,
                        }
                      }
                    >
                      o
                    </Markdown>
                  </span>
                </div>
              </div>
            </div>,
            <div
              className="person-movies-wrapper"
            >
              <h4>
                Knonw For
              </h4>
              <div
                className="person-movies-known-grid"
              >
                <PersonKnownFor
                  combinedCredits={Object {}}
                />
              </div>
              <h4>
                Acting
              </h4>
              <div
                className="person-movies-grid"
              >
                <PersonShows
                  shows={Object {}}
                />
              </div>
            </div>,
          ],
          "className": "person-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="person-poster"
                >
                  <Link
                    replace={false}
                    to="/person/1/images"
                  >
                    <MediaImage
                      className="img-responsive center-block"
                      filePath="path/to/image"
                      mediaType="profile"
                      name="poster"
                      size={2}
                    />
                  </Link>
                </div>,
                <div
                  className="person-info"
                >
                  <h3
                    className="person-name"
                    data-name=""
                  >
                    name
                  </h3>
                  <div>
                    , city
                    <span>
                      , 
                      <FormattedDate
                        day="2-digit"
                        month="long"
                        value="01.01.2000"
                        year="numeric"
                      />
                    </span>
                    <span>
                       - 
                      <FormattedDate
                        day="2-digit"
                        month="long"
                        value="02.02.2010"
                        year="numeric"
                      />
                    </span>
                  </div>
                </div>,
                <div
                  className="person-bio-wrapper"
                >
                  <h4>
                    Biography
                  </h4>
                  <input
                    className="person-bio__more"
                    id="person-bio__more"
                    type="checkbox"
                  />
                  <div
                    className="person-bio "
                  >
                    <Markdown
                      options={
                        Object {
                          "forceInline": true,
                        }
                      }
                    >
                      bi
                    </Markdown>
                    <span
                      className="person-bio__hidden"
                    >
                      <Markdown
                        options={
                          Object {
                            "forceInline": true,
                          }
                        }
                      >
                        o
                      </Markdown>
                    </span>
                  </div>
                </div>,
              ],
              "className": "person-info-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    replace={false}
                    to="/person/1/images"
                  >
                    <MediaImage
                      className="img-responsive center-block"
                      filePath="path/to/image"
                      mediaType="profile"
                      name="poster"
                      size={2}
                    />
                  </Link>,
                  "className": "person-poster",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <MediaImage
                      className="img-responsive center-block"
                      filePath="path/to/image"
                      mediaType="profile"
                      name="poster"
                      size={2}
                    />,
                    "replace": false,
                    "to": "/person/1/images",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "img-responsive center-block",
                      "filePath": "path/to/image",
                      "mediaType": "profile",
                      "name": "poster",
                      "size": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h3
                      className="person-name"
                      data-name=""
                    >
                      name
                    </h3>,
                    <div>
                      , city
                      <span>
                        , 
                        <FormattedDate
                          day="2-digit"
                          month="long"
                          value="01.01.2000"
                          year="numeric"
                        />
                      </span>
                      <span>
                         - 
                        <FormattedDate
                          day="2-digit"
                          month="long"
                          value="02.02.2010"
                          year="numeric"
                        />
                      </span>
                    </div>,
                  ],
                  "className": "person-info",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "name",
                      "className": "person-name",
                      "data-name": "",
                    },
                    "ref": null,
                    "rendered": "name",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        ", city",
                        <span>
                          , 
                          <FormattedDate
                            day="2-digit"
                            month="long"
                            value="01.01.2000"
                            year="numeric"
                          />
                        </span>,
                        <span>
                           - 
                          <FormattedDate
                            day="2-digit"
                            month="long"
                            value="02.02.2010"
                            year="numeric"
                          />
                        </span>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      ", city",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            ", ",
                            <FormattedDate
                              day="2-digit"
                              month="long"
                              value="01.01.2000"
                              year="numeric"
                            />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          ", ",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "day": "2-digit",
                              "month": "long",
                              "value": "01.01.2000",
                              "year": "numeric",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            " - ",
                            <FormattedDate
                              day="2-digit"
                              month="long"
                              value="02.02.2010"
                              year="numeric"
                            />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          " - ",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "day": "2-digit",
                              "month": "long",
                              "value": "02.02.2010",
                              "year": "numeric",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h4>
                      Biography
                    </h4>,
                    <input
                      className="person-bio__more"
                      id="person-bio__more"
                      type="checkbox"
                    />,
                    <div
                      className="person-bio "
                    >
                      <Markdown
                        options={
                          Object {
                            "forceInline": true,
                          }
                        }
                      >
                        bi
                      </Markdown>
                      <span
                        className="person-bio__hidden"
                      >
                        <Markdown
                          options={
                            Object {
                              "forceInline": true,
                            }
                          }
                        >
                          o
                        </Markdown>
                      </span>
                    </div>,
                  ],
                  "className": "person-bio-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Biography",
                    },
                    "ref": null,
                    "rendered": "Biography",
                    "type": "h4",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "person-bio__more",
                      "id": "person-bio__more",
                      "type": "checkbox",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Markdown
                          options={
                            Object {
                              "forceInline": true,
                            }
                          }
                        >
                          bi
                        </Markdown>,
                        <span
                          className="person-bio__hidden"
                        >
                          <Markdown
                            options={
                              Object {
                                "forceInline": true,
                              }
                            }
                          >
                            o
                          </Markdown>
                        </span>,
                        false,
                      ],
                      "className": "person-bio ",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "bi",
                          "options": Object {
                            "forceInline": true,
                          },
                        },
                        "ref": null,
                        "rendered": "bi",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Markdown
                            options={
                              Object {
                                "forceInline": true,
                              }
                            }
                          >
                            o
                          </Markdown>,
                          "className": "person-bio__hidden",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": "o",
                            "options": Object {
                              "forceInline": true,
                            },
                          },
                          "ref": null,
                          "rendered": "o",
                          "type": [Function],
                        },
                        "type": "span",
                      },
                      false,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Knonw For
                </h4>,
                <div
                  className="person-movies-known-grid"
                >
                  <PersonKnownFor
                    combinedCredits={Object {}}
                  />
                </div>,
                <h4>
                  Acting
                </h4>,
                <div
                  className="person-movies-grid"
                >
                  <PersonShows
                    shows={Object {}}
                  />
                </div>,
              ],
              "className": "person-movies-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Knonw For",
                },
                "ref": null,
                "rendered": "Knonw For",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <PersonKnownFor
                    combinedCredits={Object {}}
                  />,
                  "className": "person-movies-known-grid",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "combinedCredits": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Acting",
                },
                "ref": null,
                "rendered": "Acting",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <PersonShows
                    shows={Object {}}
                  />,
                  "className": "person-movies-grid",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "shows": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SEO
            title="name"
          />,
          <div
            className="person-wrapper"
          >
            <div
              className="person-info-wrapper"
            >
              <div
                className="person-poster"
              >
                <Link
                  replace={false}
                  to="/person/1/images"
                >
                  <MediaImage
                    className="img-responsive center-block"
                    filePath="path/to/image"
                    mediaType="profile"
                    name="poster"
                    size={2}
                  />
                </Link>
              </div>
              <div
                className="person-info"
              >
                <h3
                  className="person-name"
                  data-name=""
                >
                  name
                </h3>
                <div>
                  , city
                  <span>
                    , 
                    <FormattedDate
                      day="2-digit"
                      month="long"
                      value="01.01.2000"
                      year="numeric"
                    />
                  </span>
                  <span>
                     - 
                    <FormattedDate
                      day="2-digit"
                      month="long"
                      value="02.02.2010"
                      year="numeric"
                    />
                  </span>
                </div>
              </div>
              <div
                className="person-bio-wrapper"
              >
                <h4>
                  Biography
                </h4>
                <input
                  className="person-bio__more"
                  id="person-bio__more"
                  type="checkbox"
                />
                <div
                  className="person-bio "
                >
                  <Markdown
                    options={
                      Object {
                        "forceInline": true,
                      }
                    }
                  >
                    bi
                  </Markdown>
                  <span
                    className="person-bio__hidden"
                  >
                    <Markdown
                      options={
                        Object {
                          "forceInline": true,
                        }
                      }
                    >
                      o
                    </Markdown>
                  </span>
                </div>
              </div>
            </div>
            <div
              className="person-movies-wrapper"
            >
              <h4>
                Knonw For
              </h4>
              <div
                className="person-movies-known-grid"
              >
                <PersonKnownFor
                  combinedCredits={Object {}}
                />
              </div>
              <h4>
                Acting
              </h4>
              <div
                className="person-movies-grid"
              >
                <PersonShows
                  shows={Object {}}
                />
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "title": "name",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="person-info-wrapper"
              >
                <div
                  className="person-poster"
                >
                  <Link
                    replace={false}
                    to="/person/1/images"
                  >
                    <MediaImage
                      className="img-responsive center-block"
                      filePath="path/to/image"
                      mediaType="profile"
                      name="poster"
                      size={2}
                    />
                  </Link>
                </div>
                <div
                  className="person-info"
                >
                  <h3
                    className="person-name"
                    data-name=""
                  >
                    name
                  </h3>
                  <div>
                    , city
                    <span>
                      , 
                      <FormattedDate
                        day="2-digit"
                        month="long"
                        value="01.01.2000"
                        year="numeric"
                      />
                    </span>
                    <span>
                       - 
                      <FormattedDate
                        day="2-digit"
                        month="long"
                        value="02.02.2010"
                        year="numeric"
                      />
                    </span>
                  </div>
                </div>
                <div
                  className="person-bio-wrapper"
                >
                  <h4>
                    Biography
                  </h4>
                  <input
                    className="person-bio__more"
                    id="person-bio__more"
                    type="checkbox"
                  />
                  <div
                    className="person-bio "
                  >
                    <Markdown
                      options={
                        Object {
                          "forceInline": true,
                        }
                      }
                    >
                      bi
                    </Markdown>
                    <span
                      className="person-bio__hidden"
                    >
                      <Markdown
                        options={
                          Object {
                            "forceInline": true,
                          }
                        }
                      >
                        o
                      </Markdown>
                    </span>
                  </div>
                </div>
              </div>,
              <div
                className="person-movies-wrapper"
              >
                <h4>
                  Knonw For
                </h4>
                <div
                  className="person-movies-known-grid"
                >
                  <PersonKnownFor
                    combinedCredits={Object {}}
                  />
                </div>
                <h4>
                  Acting
                </h4>
                <div
                  className="person-movies-grid"
                >
                  <PersonShows
                    shows={Object {}}
                  />
                </div>
              </div>,
            ],
            "className": "person-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="person-poster"
                  >
                    <Link
                      replace={false}
                      to="/person/1/images"
                    >
                      <MediaImage
                        className="img-responsive center-block"
                        filePath="path/to/image"
                        mediaType="profile"
                        name="poster"
                        size={2}
                      />
                    </Link>
                  </div>,
                  <div
                    className="person-info"
                  >
                    <h3
                      className="person-name"
                      data-name=""
                    >
                      name
                    </h3>
                    <div>
                      , city
                      <span>
                        , 
                        <FormattedDate
                          day="2-digit"
                          month="long"
                          value="01.01.2000"
                          year="numeric"
                        />
                      </span>
                      <span>
                         - 
                        <FormattedDate
                          day="2-digit"
                          month="long"
                          value="02.02.2010"
                          year="numeric"
                        />
                      </span>
                    </div>
                  </div>,
                  <div
                    className="person-bio-wrapper"
                  >
                    <h4>
                      Biography
                    </h4>
                    <input
                      className="person-bio__more"
                      id="person-bio__more"
                      type="checkbox"
                    />
                    <div
                      className="person-bio "
                    >
                      <Markdown
                        options={
                          Object {
                            "forceInline": true,
                          }
                        }
                      >
                        bi
                      </Markdown>
                      <span
                        className="person-bio__hidden"
                      >
                        <Markdown
                          options={
                            Object {
                              "forceInline": true,
                            }
                          }
                        >
                          o
                        </Markdown>
                      </span>
                    </div>
                  </div>,
                ],
                "className": "person-info-wrapper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      replace={false}
                      to="/person/1/images"
                    >
                      <MediaImage
                        className="img-responsive center-block"
                        filePath="path/to/image"
                        mediaType="profile"
                        name="poster"
                        size={2}
                      />
                    </Link>,
                    "className": "person-poster",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <MediaImage
                        className="img-responsive center-block"
                        filePath="path/to/image"
                        mediaType="profile"
                        name="poster"
                        size={2}
                      />,
                      "replace": false,
                      "to": "/person/1/images",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "img-responsive center-block",
                        "filePath": "path/to/image",
                        "mediaType": "profile",
                        "name": "poster",
                        "size": 2,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h3
                        className="person-name"
                        data-name=""
                      >
                        name
                      </h3>,
                      <div>
                        , city
                        <span>
                          , 
                          <FormattedDate
                            day="2-digit"
                            month="long"
                            value="01.01.2000"
                            year="numeric"
                          />
                        </span>
                        <span>
                           - 
                          <FormattedDate
                            day="2-digit"
                            month="long"
                            value="02.02.2010"
                            year="numeric"
                          />
                        </span>
                      </div>,
                    ],
                    "className": "person-info",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "name",
                        "className": "person-name",
                        "data-name": "",
                      },
                      "ref": null,
                      "rendered": "name",
                      "type": "h3",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          ", city",
                          <span>
                            , 
                            <FormattedDate
                              day="2-digit"
                              month="long"
                              value="01.01.2000"
                              year="numeric"
                            />
                          </span>,
                          <span>
                             - 
                            <FormattedDate
                              day="2-digit"
                              month="long"
                              value="02.02.2010"
                              year="numeric"
                            />
                          </span>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        ", city",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              ", ",
                              <FormattedDate
                                day="2-digit"
                                month="long"
                                value="01.01.2000"
                                year="numeric"
                              />,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            ", ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "day": "2-digit",
                                "month": "long",
                                "value": "01.01.2000",
                                "year": "numeric",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              " - ",
                              <FormattedDate
                                day="2-digit"
                                month="long"
                                value="02.02.2010"
                                year="numeric"
                              />,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            " - ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "day": "2-digit",
                                "month": "long",
                                "value": "02.02.2010",
                                "year": "numeric",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h4>
                        Biography
                      </h4>,
                      <input
                        className="person-bio__more"
                        id="person-bio__more"
                        type="checkbox"
                      />,
                      <div
                        className="person-bio "
                      >
                        <Markdown
                          options={
                            Object {
                              "forceInline": true,
                            }
                          }
                        >
                          bi
                        </Markdown>
                        <span
                          className="person-bio__hidden"
                        >
                          <Markdown
                            options={
                              Object {
                                "forceInline": true,
                              }
                            }
                          >
                            o
                          </Markdown>
                        </span>
                      </div>,
                    ],
                    "className": "person-bio-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Biography",
                      },
                      "ref": null,
                      "rendered": "Biography",
                      "type": "h4",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "person-bio__more",
                        "id": "person-bio__more",
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Markdown
                            options={
                              Object {
                                "forceInline": true,
                              }
                            }
                          >
                            bi
                          </Markdown>,
                          <span
                            className="person-bio__hidden"
                          >
                            <Markdown
                              options={
                                Object {
                                  "forceInline": true,
                                }
                              }
                            >
                              o
                            </Markdown>
                          </span>,
                          false,
                        ],
                        "className": "person-bio ",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": "bi",
                            "options": Object {
                              "forceInline": true,
                            },
                          },
                          "ref": null,
                          "rendered": "bi",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Markdown
                              options={
                                Object {
                                  "forceInline": true,
                                }
                              }
                            >
                              o
                            </Markdown>,
                            "className": "person-bio__hidden",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": "o",
                              "options": Object {
                                "forceInline": true,
                              },
                            },
                            "ref": null,
                            "rendered": "o",
                            "type": [Function],
                          },
                          "type": "span",
                        },
                        false,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4>
                    Knonw For
                  </h4>,
                  <div
                    className="person-movies-known-grid"
                  >
                    <PersonKnownFor
                      combinedCredits={Object {}}
                    />
                  </div>,
                  <h4>
                    Acting
                  </h4>,
                  <div
                    className="person-movies-grid"
                  >
                    <PersonShows
                      shows={Object {}}
                    />
                  </div>,
                ],
                "className": "person-movies-wrapper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Knonw For",
                  },
                  "ref": null,
                  "rendered": "Knonw For",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <PersonKnownFor
                      combinedCredits={Object {}}
                    />,
                    "className": "person-movies-known-grid",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "combinedCredits": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Acting",
                  },
                  "ref": null,
                  "rendered": "Acting",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <PersonShows
                      shows={Object {}}
                    />,
                    "className": "person-movies-grid",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "shows": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
