// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Atoms/FilterGenres should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterGenres
    genres={
      Array [
        Object {
          "id": 1,
          "name": "genre",
        },
      ]
    }
    onChange={[MockFunction]}
    value="genre"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Select
        arrowRenderer={[Function]}
        autosize={true}
        backspaceRemoves={true}
        backspaceToRemoveMessage="Press backspace to remove {label}"
        clearAllText="Clear all"
        clearRenderer={[Function]}
        clearValueText="Clear value"
        clearable={true}
        closeOnSelect={true}
        deleteRemoves={true}
        delimiter=","
        disabled={false}
        escapeClearsValue={true}
        filterOptions={[Function]}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        isLoading={false}
        joinValues={false}
        labelKey="label"
        matchPos="any"
        matchProp="any"
        menuBuffer={0}
        menuRenderer={[Function]}
        multi={true}
        noResultsText="No results found"
        onBlurResetsInput={true}
        onChange={[MockFunction]}
        onCloseResetsInput={true}
        onSelectResetsInput={true}
        openOnClick={true}
        optionComponent={[Function]}
        options={
          Array [
            Object {
              "label": "genre",
              "value": "1",
            },
          ]
        }
        pageSize={5}
        placeholder="Filter by genres..."
        removeSelected={true}
        required={false}
        rtl={false}
        scrollMenuIntoView={true}
        searchable={true}
        simpleValue={true}
        tabSelectsValue={true}
        trimFilter={true}
        value="genre"
        valueComponent={[Function]}
        valueKey="value"
      />,
      "className": "section",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "arrowRenderer": [Function],
        "autosize": true,
        "backspaceRemoves": true,
        "backspaceToRemoveMessage": "Press backspace to remove {label}",
        "clearAllText": "Clear all",
        "clearRenderer": [Function],
        "clearValueText": "Clear value",
        "clearable": true,
        "closeOnSelect": true,
        "deleteRemoves": true,
        "delimiter": ",",
        "disabled": false,
        "escapeClearsValue": true,
        "filterOptions": [Function],
        "ignoreAccents": true,
        "ignoreCase": true,
        "inputProps": Object {},
        "isLoading": false,
        "joinValues": false,
        "labelKey": "label",
        "matchPos": "any",
        "matchProp": "any",
        "menuBuffer": 0,
        "menuRenderer": [Function],
        "multi": true,
        "noResultsText": "No results found",
        "onBlurResetsInput": true,
        "onChange": [MockFunction],
        "onCloseResetsInput": true,
        "onSelectResetsInput": true,
        "openOnClick": true,
        "optionComponent": [Function],
        "options": Array [
          Object {
            "label": "genre",
            "value": "1",
          },
        ],
        "pageSize": 5,
        "placeholder": "Filter by genres...",
        "removeSelected": true,
        "required": false,
        "rtl": false,
        "scrollMenuIntoView": true,
        "searchable": true,
        "simpleValue": true,
        "tabSelectsValue": true,
        "trimFilter": true,
        "value": "genre",
        "valueComponent": [Function],
        "valueKey": "value",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Select
          arrowRenderer={[Function]}
          autosize={true}
          backspaceRemoves={true}
          backspaceToRemoveMessage="Press backspace to remove {label}"
          clearAllText="Clear all"
          clearRenderer={[Function]}
          clearValueText="Clear value"
          clearable={true}
          closeOnSelect={true}
          deleteRemoves={true}
          delimiter=","
          disabled={false}
          escapeClearsValue={true}
          filterOptions={[Function]}
          ignoreAccents={true}
          ignoreCase={true}
          inputProps={Object {}}
          isLoading={false}
          joinValues={false}
          labelKey="label"
          matchPos="any"
          matchProp="any"
          menuBuffer={0}
          menuRenderer={[Function]}
          multi={true}
          noResultsText="No results found"
          onBlurResetsInput={true}
          onChange={[MockFunction]}
          onCloseResetsInput={true}
          onSelectResetsInput={true}
          openOnClick={true}
          optionComponent={[Function]}
          options={
            Array [
              Object {
                "label": "genre",
                "value": "1",
              },
            ]
          }
          pageSize={5}
          placeholder="Filter by genres..."
          removeSelected={true}
          required={false}
          rtl={false}
          scrollMenuIntoView={true}
          searchable={true}
          simpleValue={true}
          tabSelectsValue={true}
          trimFilter={true}
          value="genre"
          valueComponent={[Function]}
          valueKey="value"
        />,
        "className": "section",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "arrowRenderer": [Function],
          "autosize": true,
          "backspaceRemoves": true,
          "backspaceToRemoveMessage": "Press backspace to remove {label}",
          "clearAllText": "Clear all",
          "clearRenderer": [Function],
          "clearValueText": "Clear value",
          "clearable": true,
          "closeOnSelect": true,
          "deleteRemoves": true,
          "delimiter": ",",
          "disabled": false,
          "escapeClearsValue": true,
          "filterOptions": [Function],
          "ignoreAccents": true,
          "ignoreCase": true,
          "inputProps": Object {},
          "isLoading": false,
          "joinValues": false,
          "labelKey": "label",
          "matchPos": "any",
          "matchProp": "any",
          "menuBuffer": 0,
          "menuRenderer": [Function],
          "multi": true,
          "noResultsText": "No results found",
          "onBlurResetsInput": true,
          "onChange": [MockFunction],
          "onCloseResetsInput": true,
          "onSelectResetsInput": true,
          "openOnClick": true,
          "optionComponent": [Function],
          "options": Array [
            Object {
              "label": "genre",
              "value": "1",
            },
          ],
          "pageSize": 5,
          "placeholder": "Filter by genres...",
          "removeSelected": true,
          "required": false,
          "rtl": false,
          "scrollMenuIntoView": true,
          "searchable": true,
          "simpleValue": true,
          "tabSelectsValue": true,
          "trimFilter": true,
          "value": "genre",
          "valueComponent": [Function],
          "valueKey": "value",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
