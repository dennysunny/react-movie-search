// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Atoms/Crew should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Crew
    crew={
      Array [
        Object {
          "job": "job",
          "name": "test",
        },
        Object {
          "job": "job",
          "name": "test",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="crew-wrapper"
      >
        <div
          className="crew-element"
        >
          <small>
            <strong>
              job:
            </strong>
          </small>
          <small>
            test
          </small>
        </div>
        <div
          className="crew-element"
        >
          <small>
            <strong>
              job:
            </strong>
          </small>
          <small>
            test
          </small>
        </div>
      </div>,
      "className": "crew",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="crew-element"
          >
            <small>
              <strong>
                job:
              </strong>
            </small>
            <small>
              test
            </small>
          </div>,
          <div
            className="crew-element"
          >
            <small>
              <strong>
                job:
              </strong>
            </small>
            <small>
              test
            </small>
          </div>,
        ],
        "className": "crew-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "test-0",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <small>
                <strong>
                  job:
                </strong>
              </small>,
              <small>
                test
              </small>,
            ],
            "className": "crew-element",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <strong>
                  job:
                </strong>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "job:",
                },
                "ref": null,
                "rendered": "job:",
                "type": "strong",
              },
              "type": "small",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "small",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "test-1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <small>
                <strong>
                  job:
                </strong>
              </small>,
              <small>
                test
              </small>,
            ],
            "className": "crew-element",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <strong>
                  job:
                </strong>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "job:",
                },
                "ref": null,
                "rendered": "job:",
                "type": "strong",
              },
              "type": "small",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "small",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="crew-wrapper"
        >
          <div
            className="crew-element"
          >
            <small>
              <strong>
                job:
              </strong>
            </small>
            <small>
              test
            </small>
          </div>
          <div
            className="crew-element"
          >
            <small>
              <strong>
                job:
              </strong>
            </small>
            <small>
              test
            </small>
          </div>
        </div>,
        "className": "crew",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="crew-element"
            >
              <small>
                <strong>
                  job:
                </strong>
              </small>
              <small>
                test
              </small>
            </div>,
            <div
              className="crew-element"
            >
              <small>
                <strong>
                  job:
                </strong>
              </small>
              <small>
                test
              </small>
            </div>,
          ],
          "className": "crew-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "test-0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <small>
                  <strong>
                    job:
                  </strong>
                </small>,
                <small>
                  test
                </small>,
              ],
              "className": "crew-element",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <strong>
                    job:
                  </strong>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "job:",
                  },
                  "ref": null,
                  "rendered": "job:",
                  "type": "strong",
                },
                "type": "small",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "small",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "test-1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <small>
                  <strong>
                    job:
                  </strong>
                </small>,
                <small>
                  test
                </small>,
              ],
              "className": "crew-element",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <strong>
                    job:
                  </strong>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "job:",
                  },
                  "ref": null,
                  "rendered": "job:",
                  "type": "strong",
                },
                "type": "small",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "small",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
