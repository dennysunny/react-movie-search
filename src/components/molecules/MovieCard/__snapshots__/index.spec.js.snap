// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Molecules/MovieCard should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieCard
    img_base_path="path/to/image"
    media="movie"
    movie={
      Object {
        "backdrop_path": "path/to/image",
        "genres": Array [
          Object {
            "genre_name": "genre",
            "id": 1,
          },
        ],
        "id": 1,
        "name": "name",
        "overview": "overview",
        "poster_path": "path/to/image",
        "release_date": "01.01.2010",
        "vote_average": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/movie/1"
        >
          <picture
            className="movies-poster"
          >
            <source
              media="(min-width: 941px)"
              srcSet="path/to/imagepath/to/image"
            />
            <source
              media="(max-width: 940px)"
              srcSet="path/to/imagepath/to/image"
            />
            <img
              alt="name"
              className="movies-poster"
              src="path/to/imagepath/to/image"
            />
          </picture>
        </Link>,
        <div
          className="clearfix"
        >
          <div
            className="movies-title"
          >
            name
          </div>
          <div
            className="movies-rating"
          >
            1
          </div>
        </div>,
        <div
          className="clearfix"
        >
          <div
            className="movies-year"
          >
            01.0
          </div>
        </div>,
        <div
          className="movies-overview  "
        >
          overvie
        </div>,
        <WatchlistBookmark
          movie={
            Object {
              "backdrop_path": "path/to/image",
              "genres": Array [
                Object {
                  "genre_name": "genre",
                  "id": 1,
                },
              ],
              "id": 1,
              "name": "name",
              "overview": "overview",
              "poster_path": "path/to/image",
              "release_date": "01.01.2010",
              "vote_average": 1,
            }
          }
        />,
      ],
      "className": "movies-list__element",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <picture
            className="movies-poster"
          >
            <source
              media="(min-width: 941px)"
              srcSet="path/to/imagepath/to/image"
            />
            <source
              media="(max-width: 940px)"
              srcSet="path/to/imagepath/to/image"
            />
            <img
              alt="name"
              className="movies-poster"
              src="path/to/imagepath/to/image"
            />
          </picture>,
          "replace": false,
          "to": "/movie/1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <source
                media="(min-width: 941px)"
                srcSet="path/to/imagepath/to/image"
              />,
              <source
                media="(max-width: 940px)"
                srcSet="path/to/imagepath/to/image"
              />,
              <img
                alt="name"
                className="movies-poster"
                src="path/to/imagepath/to/image"
              />,
            ],
            "className": "movies-poster",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "media": "(min-width: 941px)",
                "srcSet": "path/to/imagepath/to/image",
              },
              "ref": null,
              "rendered": null,
              "type": "source",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "media": "(max-width: 940px)",
                "srcSet": "path/to/imagepath/to/image",
              },
              "ref": null,
              "rendered": null,
              "type": "source",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "name",
                "className": "movies-poster",
                "src": "path/to/imagepath/to/image",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
          ],
          "type": "picture",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="movies-title"
            >
              name
            </div>,
            <div
              className="movies-rating"
            >
              1
            </div>,
          ],
          "className": "clearfix",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "name",
              "className": "movies-title",
            },
            "ref": null,
            "rendered": "name",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 1,
              "className": "movies-rating",
            },
            "ref": null,
            "rendered": 1,
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="movies-year"
          >
            01.0
          </div>,
          "className": "clearfix",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "01.0",
            "className": "movies-year",
          },
          "ref": null,
          "rendered": "01.0",
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "overvie",
          "className": "movies-overview  ",
        },
        "ref": null,
        "rendered": "overvie",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "movie": Object {
            "backdrop_path": "path/to/image",
            "genres": Array [
              Object {
                "genre_name": "genre",
                "id": 1,
              },
            ],
            "id": 1,
            "name": "name",
            "overview": "overview",
            "poster_path": "path/to/image",
            "release_date": "01.01.2010",
            "vote_average": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/movie/1"
          >
            <picture
              className="movies-poster"
            >
              <source
                media="(min-width: 941px)"
                srcSet="path/to/imagepath/to/image"
              />
              <source
                media="(max-width: 940px)"
                srcSet="path/to/imagepath/to/image"
              />
              <img
                alt="name"
                className="movies-poster"
                src="path/to/imagepath/to/image"
              />
            </picture>
          </Link>,
          <div
            className="clearfix"
          >
            <div
              className="movies-title"
            >
              name
            </div>
            <div
              className="movies-rating"
            >
              1
            </div>
          </div>,
          <div
            className="clearfix"
          >
            <div
              className="movies-year"
            >
              01.0
            </div>
          </div>,
          <div
            className="movies-overview  "
          >
            overvie
          </div>,
          <WatchlistBookmark
            movie={
              Object {
                "backdrop_path": "path/to/image",
                "genres": Array [
                  Object {
                    "genre_name": "genre",
                    "id": 1,
                  },
                ],
                "id": 1,
                "name": "name",
                "overview": "overview",
                "poster_path": "path/to/image",
                "release_date": "01.01.2010",
                "vote_average": 1,
              }
            }
          />,
        ],
        "className": "movies-list__element",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <picture
              className="movies-poster"
            >
              <source
                media="(min-width: 941px)"
                srcSet="path/to/imagepath/to/image"
              />
              <source
                media="(max-width: 940px)"
                srcSet="path/to/imagepath/to/image"
              />
              <img
                alt="name"
                className="movies-poster"
                src="path/to/imagepath/to/image"
              />
            </picture>,
            "replace": false,
            "to": "/movie/1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <source
                  media="(min-width: 941px)"
                  srcSet="path/to/imagepath/to/image"
                />,
                <source
                  media="(max-width: 940px)"
                  srcSet="path/to/imagepath/to/image"
                />,
                <img
                  alt="name"
                  className="movies-poster"
                  src="path/to/imagepath/to/image"
                />,
              ],
              "className": "movies-poster",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "media": "(min-width: 941px)",
                  "srcSet": "path/to/imagepath/to/image",
                },
                "ref": null,
                "rendered": null,
                "type": "source",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "media": "(max-width: 940px)",
                  "srcSet": "path/to/imagepath/to/image",
                },
                "ref": null,
                "rendered": null,
                "type": "source",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "name",
                  "className": "movies-poster",
                  "src": "path/to/imagepath/to/image",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
            ],
            "type": "picture",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="movies-title"
              >
                name
              </div>,
              <div
                className="movies-rating"
              >
                1
              </div>,
            ],
            "className": "clearfix",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "name",
                "className": "movies-title",
              },
              "ref": null,
              "rendered": "name",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 1,
                "className": "movies-rating",
              },
              "ref": null,
              "rendered": 1,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="movies-year"
            >
              01.0
            </div>,
            "className": "clearfix",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "01.0",
              "className": "movies-year",
            },
            "ref": null,
            "rendered": "01.0",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "overvie",
            "className": "movies-overview  ",
          },
          "ref": null,
          "rendered": "overvie",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "movie": Object {
              "backdrop_path": "path/to/image",
              "genres": Array [
                Object {
                  "genre_name": "genre",
                  "id": 1,
                },
              ],
              "id": 1,
              "name": "name",
              "overview": "overview",
              "poster_path": "path/to/image",
              "release_date": "01.01.2010",
              "vote_average": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
