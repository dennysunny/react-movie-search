// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Molecules/LastSeason should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LastSeason
    season={
      Object {
        "season_id": 1,
      }
    }
    tvId={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h4>
          Last season
        </h4>,
        <Season
          season={
            Object {
              "season_id": 1,
            }
          }
          tvId={1}
        />,
        <Link
          className="all-seasons-btn"
          replace={false}
          to="/tv/1/seasons"
        >
          View All Seasons
        </Link>,
      ],
      "className": "last-season",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Last season",
        },
        "ref": null,
        "rendered": "Last season",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "season": Object {
            "season_id": 1,
          },
          "tvId": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "View All Seasons",
          "className": "all-seasons-btn",
          "replace": false,
          "to": "/tv/1/seasons",
        },
        "ref": null,
        "rendered": "View All Seasons",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4>
            Last season
          </h4>,
          <Season
            season={
              Object {
                "season_id": 1,
              }
            }
            tvId={1}
          />,
          <Link
            className="all-seasons-btn"
            replace={false}
            to="/tv/1/seasons"
          >
            View All Seasons
          </Link>,
        ],
        "className": "last-season",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Last season",
          },
          "ref": null,
          "rendered": "Last season",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "season": Object {
              "season_id": 1,
            },
            "tvId": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "View All Seasons",
            "className": "all-seasons-btn",
            "replace": false,
            "to": "/tv/1/seasons",
          },
          "ref": null,
          "rendered": "View All Seasons",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
