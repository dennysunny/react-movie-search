// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Molecules/PersonShows should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PersonShows
    shows={
      Object {
        "cast": Array [
          Object {
            "character": "character",
            "id": 1,
            "poster_path": "path/to/image",
            "release_date": "01.01.2010",
            "title": "title",
          },
          Object {
            "character": "character",
            "first_air_date": "01.01.2011",
            "id": 2,
            "name": "name",
            "poster_path": "path/to/image",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "name2-0",
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <p
          className="person-movie__poster"
        >
          <Apollo(MediaImage)
            filePath="path/to/image"
            mediaType="poster"
            name="name"
            size={1}
          />
        </p>,
        <p
          className="person-movie__release"
        >
          01.0
        </p>,
        <p
          className="person-movie__title"
        >
          name
          <span
            className="person-movie__character"
          >
             as character
          </span>
        </p>,
      ],
      "className": "person-movie",
      "replace": false,
      "to": "/tv/2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Apollo(MediaImage)
            filePath="path/to/image"
            mediaType="poster"
            name="name"
            size={1}
          />,
          "className": "person-movie__poster",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "filePath": "path/to/image",
            "mediaType": "poster",
            "name": "name",
            "size": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "01.0",
          "className": "person-movie__release",
        },
        "ref": null,
        "rendered": "01.0",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "name",
            <span
              className="person-movie__character"
            >
               as character
            </span>,
          ],
          "className": "person-movie__title",
        },
        "ref": null,
        "rendered": Array [
          "name",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " as character",
              "className": "person-movie__character",
            },
            "ref": null,
            "rendered": " as character",
            "type": "span",
          },
        ],
        "type": "p",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "name2-0",
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <p
            className="person-movie__poster"
          >
            <Apollo(MediaImage)
              filePath="path/to/image"
              mediaType="poster"
              name="name"
              size={1}
            />
          </p>,
          <p
            className="person-movie__release"
          >
            01.0
          </p>,
          <p
            className="person-movie__title"
          >
            name
            <span
              className="person-movie__character"
            >
               as character
            </span>
          </p>,
        ],
        "className": "person-movie",
        "replace": false,
        "to": "/tv/2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Apollo(MediaImage)
              filePath="path/to/image"
              mediaType="poster"
              name="name"
              size={1}
            />,
            "className": "person-movie__poster",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "filePath": "path/to/image",
              "mediaType": "poster",
              "name": "name",
              "size": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "01.0",
            "className": "person-movie__release",
          },
          "ref": null,
          "rendered": "01.0",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "name",
              <span
                className="person-movie__character"
              >
                 as character
              </span>,
            ],
            "className": "person-movie__title",
          },
          "ref": null,
          "rendered": Array [
            "name",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " as character",
                "className": "person-movie__character",
              },
              "ref": null,
              "rendered": " as character",
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": [Function],
    },
    Object {
      "instance": null,
      "key": "title1-1",
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <p
            className="person-movie__poster"
          >
            <Apollo(MediaImage)
              filePath="path/to/image"
              mediaType="poster"
              name="title"
              size={1}
            />
          </p>,
          <p
            className="person-movie__release"
          >
            01.0
          </p>,
          <p
            className="person-movie__title"
          >
            title
            <span
              className="person-movie__character"
            >
               as character
            </span>
          </p>,
        ],
        "className": "person-movie",
        "replace": false,
        "to": "/movie/1",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Apollo(MediaImage)
              filePath="path/to/image"
              mediaType="poster"
              name="title"
              size={1}
            />,
            "className": "person-movie__poster",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "filePath": "path/to/image",
              "mediaType": "poster",
              "name": "title",
              "size": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "01.0",
            "className": "person-movie__release",
          },
          "ref": null,
          "rendered": "01.0",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "title",
              <span
                className="person-movie__character"
              >
                 as character
              </span>,
            ],
            "className": "person-movie__title",
          },
          "ref": null,
          "rendered": Array [
            "title",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " as character",
                "className": "person-movie__character",
              },
              "ref": null,
              "rendered": " as character",
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
