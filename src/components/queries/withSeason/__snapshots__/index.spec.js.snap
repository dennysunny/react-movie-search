// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Queries/withSeason should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MockComponent
    loading={true}
    options={
      Object {
        "fetchPolicy": "cache-and-network",
        "variables": Object {
          "season": 1,
          "tvId": 1,
        },
      }
    }
    tvSeason={
      Object {
        "air_date": "01.01.2010",
        "episodes": Array [
          Object {
            "air_date": "01.01.2010",
            "episode_number": 1,
            "name": "name",
            "overview": 1,
            "still_path": "path/to/image",
          },
        ],
        "name": "name",
        "poster_path": "path/to/image",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "loading": true,
    "options": Object {
      "fetchPolicy": "cache-and-network",
      "variables": Object {
        "season": 1,
        "tvId": 1,
      },
    },
    "tvSeason": Object {
      "air_date": "01.01.2010",
      "episodes": Array [
        Object {
          "air_date": "01.01.2010",
          "episode_number": 1,
          "name": "name",
          "overview": 1,
          "still_path": "path/to/image",
        },
      ],
      "name": "name",
      "poster_path": "path/to/image",
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "loading": true,
      "options": Object {
        "fetchPolicy": "cache-and-network",
        "variables": Object {
          "season": 1,
          "tvId": 1,
        },
      },
      "tvSeason": Object {
        "air_date": "01.01.2010",
        "episodes": Array [
          Object {
            "air_date": "01.01.2010",
            "episode_number": 1,
            "name": "name",
            "overview": 1,
            "still_path": "path/to/image",
          },
        ],
        "name": "name",
        "poster_path": "path/to/image",
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
