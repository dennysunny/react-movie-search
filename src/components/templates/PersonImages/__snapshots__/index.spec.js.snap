// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Templates/PersonImages should render a spinner when loading expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PersonImages
    config={
      Object {
        "images": Object {
          "profile_sizes": Array [
            "1",
            "2",
            "3",
            "4",
          ],
          "secure_base_url": "path/to/image",
        },
      }
    }
    loading={true}
    person={
      Object {
        "birthday": "10.10.2010",
        "id": 1,
        "images": Array [
          Object {
            "file_path": "path/to/image",
            "height": 1,
            "vote_average": 1,
            "width": 1,
          },
          Object {
            "file_path": "path/to/image",
            "height": 1,
            "vote_average": 2,
            "width": 1,
          },
        ],
        "name": "name",
        "profile_path": "path/to/image",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Templates/PersonImages should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PersonImages
    config={
      Object {
        "images": Object {
          "profile_sizes": Array [
            "1",
            "2",
            "3",
            "4",
          ],
          "secure_base_url": "path/to/image",
        },
      }
    }
    loading={false}
    person={
      Object {
        "birthday": "10.10.2010",
        "id": 1,
        "images": Array [
          Object {
            "file_path": "path/to/image",
            "height": 1,
            "vote_average": 1,
            "width": 1,
          },
          Object {
            "file_path": "path/to/image",
            "height": 1,
            "vote_average": 2,
            "width": 1,
          },
        ],
        "name": "name",
        "profile_path": "path/to/image",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MiniHeader
          link="/person/1"
          linkCopy="Back to main"
          poster_path="path/to/image"
          release_date="10.10.2010"
          title="name"
        />,
        <div
          className="cast-images__container"
        >
          <figure
            className="cast-images__element"
          >
            <a
              href="path/to/image4path/to/image"
              rel="noopener noreferrer"
              target="_blank"
            >
              <MediaImage
                filePath="path/to/image"
                mediaType="profile"
                name="name"
                size={2}
              />
              <figcaption>
                <p>
                  Size:
                  <br />
                  1 x 1
                </p>
              </figcaption>
            </a>
          </figure>
          <figure
            className="cast-images__element"
          >
            <a
              href="path/to/image4path/to/image"
              rel="noopener noreferrer"
              target="_blank"
            >
              <MediaImage
                filePath="path/to/image"
                mediaType="profile"
                name="name"
                size={2}
              />
              <figcaption>
                <p>
                  Size:
                  <br />
                  1 x 1
                </p>
              </figcaption>
            </a>
          </figure>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "link": "/person/1",
          "linkCopy": "Back to main",
          "poster_path": "path/to/image",
          "release_date": "10.10.2010",
          "title": "name",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <figure
              className="cast-images__element"
            >
              <a
                href="path/to/image4path/to/image"
                rel="noopener noreferrer"
                target="_blank"
              >
                <MediaImage
                  filePath="path/to/image"
                  mediaType="profile"
                  name="name"
                  size={2}
                />
                <figcaption>
                  <p>
                    Size:
                    <br />
                    1 x 1
                  </p>
                </figcaption>
              </a>
            </figure>,
            <figure
              className="cast-images__element"
            >
              <a
                href="path/to/image4path/to/image"
                rel="noopener noreferrer"
                target="_blank"
              >
                <MediaImage
                  filePath="path/to/image"
                  mediaType="profile"
                  name="name"
                  size={2}
                />
                <figcaption>
                  <p>
                    Size:
                    <br />
                    1 x 1
                  </p>
                </figcaption>
              </a>
            </figure>,
          ],
          "className": "cast-images__container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "path/to/image",
            "nodeType": "host",
            "props": Object {
              "children": <a
                href="path/to/image4path/to/image"
                rel="noopener noreferrer"
                target="_blank"
              >
                <MediaImage
                  filePath="path/to/image"
                  mediaType="profile"
                  name="name"
                  size={2}
                />
                <figcaption>
                  <p>
                    Size:
                    <br />
                    1 x 1
                  </p>
                </figcaption>
              </a>,
              "className": "cast-images__element",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MediaImage
                    filePath="path/to/image"
                    mediaType="profile"
                    name="name"
                    size={2}
                  />,
                  <figcaption>
                    <p>
                      Size:
                      <br />
                      1 x 1
                    </p>
                  </figcaption>,
                ],
                "href": "path/to/image4path/to/image",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "filePath": "path/to/image",
                    "mediaType": "profile",
                    "name": "name",
                    "size": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <p>
                      Size:
                      <br />
                      1 x 1
                    </p>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Size:",
                        <br />,
                        "1 x 1",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Size:",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      "1 x 1",
                    ],
                    "type": "p",
                  },
                  "type": "figcaption",
                },
              ],
              "type": "a",
            },
            "type": "figure",
          },
          Object {
            "instance": null,
            "key": "path/to/image",
            "nodeType": "host",
            "props": Object {
              "children": <a
                href="path/to/image4path/to/image"
                rel="noopener noreferrer"
                target="_blank"
              >
                <MediaImage
                  filePath="path/to/image"
                  mediaType="profile"
                  name="name"
                  size={2}
                />
                <figcaption>
                  <p>
                    Size:
                    <br />
                    1 x 1
                  </p>
                </figcaption>
              </a>,
              "className": "cast-images__element",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MediaImage
                    filePath="path/to/image"
                    mediaType="profile"
                    name="name"
                    size={2}
                  />,
                  <figcaption>
                    <p>
                      Size:
                      <br />
                      1 x 1
                    </p>
                  </figcaption>,
                ],
                "href": "path/to/image4path/to/image",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "filePath": "path/to/image",
                    "mediaType": "profile",
                    "name": "name",
                    "size": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <p>
                      Size:
                      <br />
                      1 x 1
                    </p>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Size:",
                        <br />,
                        "1 x 1",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Size:",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      "1 x 1",
                    ],
                    "type": "p",
                  },
                  "type": "figcaption",
                },
              ],
              "type": "a",
            },
            "type": "figure",
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MiniHeader
            link="/person/1"
            linkCopy="Back to main"
            poster_path="path/to/image"
            release_date="10.10.2010"
            title="name"
          />,
          <div
            className="cast-images__container"
          >
            <figure
              className="cast-images__element"
            >
              <a
                href="path/to/image4path/to/image"
                rel="noopener noreferrer"
                target="_blank"
              >
                <MediaImage
                  filePath="path/to/image"
                  mediaType="profile"
                  name="name"
                  size={2}
                />
                <figcaption>
                  <p>
                    Size:
                    <br />
                    1 x 1
                  </p>
                </figcaption>
              </a>
            </figure>
            <figure
              className="cast-images__element"
            >
              <a
                href="path/to/image4path/to/image"
                rel="noopener noreferrer"
                target="_blank"
              >
                <MediaImage
                  filePath="path/to/image"
                  mediaType="profile"
                  name="name"
                  size={2}
                />
                <figcaption>
                  <p>
                    Size:
                    <br />
                    1 x 1
                  </p>
                </figcaption>
              </a>
            </figure>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "link": "/person/1",
            "linkCopy": "Back to main",
            "poster_path": "path/to/image",
            "release_date": "10.10.2010",
            "title": "name",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <figure
                className="cast-images__element"
              >
                <a
                  href="path/to/image4path/to/image"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <MediaImage
                    filePath="path/to/image"
                    mediaType="profile"
                    name="name"
                    size={2}
                  />
                  <figcaption>
                    <p>
                      Size:
                      <br />
                      1 x 1
                    </p>
                  </figcaption>
                </a>
              </figure>,
              <figure
                className="cast-images__element"
              >
                <a
                  href="path/to/image4path/to/image"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <MediaImage
                    filePath="path/to/image"
                    mediaType="profile"
                    name="name"
                    size={2}
                  />
                  <figcaption>
                    <p>
                      Size:
                      <br />
                      1 x 1
                    </p>
                  </figcaption>
                </a>
              </figure>,
            ],
            "className": "cast-images__container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "path/to/image",
              "nodeType": "host",
              "props": Object {
                "children": <a
                  href="path/to/image4path/to/image"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <MediaImage
                    filePath="path/to/image"
                    mediaType="profile"
                    name="name"
                    size={2}
                  />
                  <figcaption>
                    <p>
                      Size:
                      <br />
                      1 x 1
                    </p>
                  </figcaption>
                </a>,
                "className": "cast-images__element",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <MediaImage
                      filePath="path/to/image"
                      mediaType="profile"
                      name="name"
                      size={2}
                    />,
                    <figcaption>
                      <p>
                        Size:
                        <br />
                        1 x 1
                      </p>
                    </figcaption>,
                  ],
                  "href": "path/to/image4path/to/image",
                  "rel": "noopener noreferrer",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "filePath": "path/to/image",
                      "mediaType": "profile",
                      "name": "name",
                      "size": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <p>
                        Size:
                        <br />
                        1 x 1
                      </p>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Size:",
                          <br />,
                          "1 x 1",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Size:",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": "br",
                        },
                        "1 x 1",
                      ],
                      "type": "p",
                    },
                    "type": "figcaption",
                  },
                ],
                "type": "a",
              },
              "type": "figure",
            },
            Object {
              "instance": null,
              "key": "path/to/image",
              "nodeType": "host",
              "props": Object {
                "children": <a
                  href="path/to/image4path/to/image"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <MediaImage
                    filePath="path/to/image"
                    mediaType="profile"
                    name="name"
                    size={2}
                  />
                  <figcaption>
                    <p>
                      Size:
                      <br />
                      1 x 1
                    </p>
                  </figcaption>
                </a>,
                "className": "cast-images__element",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <MediaImage
                      filePath="path/to/image"
                      mediaType="profile"
                      name="name"
                      size={2}
                    />,
                    <figcaption>
                      <p>
                        Size:
                        <br />
                        1 x 1
                      </p>
                    </figcaption>,
                  ],
                  "href": "path/to/image4path/to/image",
                  "rel": "noopener noreferrer",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "filePath": "path/to/image",
                      "mediaType": "profile",
                      "name": "name",
                      "size": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <p>
                        Size:
                        <br />
                        1 x 1
                      </p>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Size:",
                          <br />,
                          "1 x 1",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Size:",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": "br",
                        },
                        "1 x 1",
                      ],
                      "type": "p",
                    },
                    "type": "figcaption",
                  },
                ],
                "type": "a",
              },
              "type": "figure",
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
